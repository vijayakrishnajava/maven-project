pipeline {

    agent any

    parameters {
        string(name:'TOMCAT_HOME', defaultValue:'C://wellness//apache-tomcat-8.5.8')
        string(name:'workspace', defaultValue:"C://Program Files\\ \\(x86\\)//Jenkins//workspace//pipeline-build-deploy")
    }

    stages {

        stage('build') {

            steps {
                echo 'build phase started'
                sh 'mvn clean install'
            }

            post {
                 success {
                     echo 'build successful'
                 }
                 failure {
                     echo 'build failed'
                 }
            }

        }

    
        stage('post deployment') {

            steps {
                echo 'post deployment phase started'
                archiveArtifacts artifacts: '**/target/*.war'
            }

            post {

                success {
                    echo "post deployment is successful"
                }

                failure {
                    echo "post deployment is failed"
                }
            }

        }


        stage('deploy in staging') {
            steps {
                echo 'cleaning tomcat temp dir'
                sh "rm -rf ${params.TOMCAT_HOME}/temp/*.*"
                echo 'cleaning tomcat work dir'
                sh "rm -rf ${params.TOMCAT_HOME}/work/*.*"
                echo 'cleaning tomcat webapp dir'
               sh "rm -rf ${params.TOMCAT_HOME}/webapps/webapp.war"
               sh "rm -rf ${params.TOMCAT_HOME}/webapps/webapp"
                echo 'copying the new war file'
                
                sh "cp ${params.workspace}/webapp/target/wepapp.war ${params.TOMCAT_HOME}/webapps"  
            }
        }

        stage ('deploy to production') {

            steps {
                echo 'deploying in production'
                timeout(time:5, unit:'DAYS') {
                    input message : 'Approve the changes to production?'
                }
                build job : 'deploy-to-prod'
            }
            post {

                success {
                    echo 'deployment in production completed'
                }

                failure {
                    echo 'deployment in production failed'
                }
            }

            
        }

    }
}